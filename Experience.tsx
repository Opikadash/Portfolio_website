import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Briefcase, Calendar } from "lucide-react";
import { useEffect, useRef, useState } from "react";

interface Experience {
  title: string;
  company: string;
  period: string;
  description: string[];
  tags?: string[];
}

const Experience = () => {
  const experiences: Experience[] = [
    {
      title: "Tech Intern",
      company: "Auradine",
      period: "Aug 2024 - Oct 2024",
      description: [
        "Created a library to parse log files generated by mining pools.",
        "Learned Python libraries like Regex, Pandas, NumPy, Seaborn and pandas[sql] etc."
      ],
      tags: ["Python", "Data Analysis", "Log Parsing"]
    },
    {
      title: "Company Sergeant Major",
      company: "NCC",
      period: "2020 - 2022",
      description: [
        "Led and mentored cadets, ensuring discipline and training.",
        "Received B-Certificate with A-grade."
      ],
      tags: ["Leadership", "Training", "Mentoring"]
    },
    {
      title: "Model",
      company: "Inferno Vogue",
      period: "2020",
      description: [
        "Walked runway at Chilika Fashion Week.",
      ],
      tags: ["Fashion", "Performance", "Presentation"]
    },
    {
      title: "Content Writer",
      company: "Freelance",
      period: "2020 - Present",
      description: [
        "Researched and created engaging, high-quality content.",
      ],
      tags: ["Research", "Writing", "Communication"]
    }
  ];

  return (
    <section id="experience" className="py-16 bg-secondary/30">
      <div className="container mx-auto px-4">
        <h2 className="section-title">Experience</h2>
        
        <div className="space-y-8">
          {experiences.map((exp, index) => (
            <ExperienceCard 
              key={`${exp.company}-${exp.title}`}
              experience={exp}
              index={index}
            />
          ))}
        </div>
      </div>
    </section>
  );
};

const ExperienceCard = ({ 
  experience,
  index
}: {
  experience: Experience;
  index: number;
}) => {
  const cardRef = useRef<HTMLDivElement>(null);
  const [isVisible, setIsVisible] = useState(false);
  
  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
          observer.unobserve(entry.target);
        }
      },
      {
        root: null,
        rootMargin: "0px",
        threshold: 0.1,
      }
    );
    
    if (cardRef.current) {
      observer.observe(cardRef.current);
    }
    
    return () => {
      if (cardRef.current) {
        observer.unobserve(cardRef.current);
      }
    };
  }, []);
  
  return (
    <div
      ref={cardRef}
      className={`transform transition-all duration-500 ${
        isVisible 
          ? "translate-y-0 opacity-100" 
          : "translate-y-20 opacity-0"
      }`}
      style={{ transitionDelay: `${index * 100}ms` }}
    >
      <Card className="gradient-border bg-card">
        <CardHeader>
          <div className="flex flex-col md:flex-row md:items-center justify-between gap-2">
            <div>
              <div className="flex items-center gap-2">
                <Briefcase className="h-5 w-5 text-kiitr" />
                <CardTitle className="text-xl">{experience.title} at {experience.company}</CardTitle>
              </div>
            </div>
            <div className="flex items-center text-sm text-muted-foreground">
              <Calendar className="h-4 w-4 mr-1" />
              {experience.period}
            </div>
          </div>
        </CardHeader>
        <CardContent>
          <ul className="list-disc list-inside space-y-1 mb-4">
            {experience.description.map((item, i) => (
              <li key={i} className="text-foreground/80">{item}</li>
            ))}
          </ul>
          
          {experience.tags && (
            <div className="flex flex-wrap gap-2">
              {experience.tags.map(tag => (
                <Badge key={tag} variant="outline">{tag}</Badge>
              ))}
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export default Experience;
